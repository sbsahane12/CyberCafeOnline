<% layout("/layouts/adminboilerplate") %>
<style>
    /* Styles for the container */
    .max-w-lg {
    max-width: 32rem; /* Adjust the max-width as needed */
}

/* Styles for the heading */
.text-lg {
    font-size: 1.125rem; /* Adjust the font size as needed */
}

.font-semibold {
    font-weight: 600;
}

/* Styles for the input fields */
input[type="text"],
input[type="file"] {
    width: 100%;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
    border: 2px solid #f37a05; /* Adjust the border color as needed */
    border-radius: 0.375rem; /* Adjust the border radius as needed */
}

.width-full{
    width: 600px;
}


.btn:hover {
    opacity: 0.8;
    cursor: pointer;
    color: #a64500;
}
/* Styles for specific buttons */
.bg-zinc-300 {
    background-color: #f2f5f7; /* Adjust the background color as needed */
}

.bg-zinc-400 {
    background-color: #dce5ec; /* Adjust the background color as needed */
}

.bg-red-500 {
    background-color: #e53e3e; /* Adjust the background color as needed */
}

.bg-red-600 {
    background-color: #c53030; /* Adjust the background color as needed */
}

.bg-orange-500 {
    background-color: #f37a05; /* Adjust the background color as needed */
}

.bg-orange-600 {
    background-color: #ed6707; /* Adjust the background color as needed */
}

.text-black {
    color: #000; /* Adjust the text color as needed */
}

.text-white {
    color: #fff; /* Adjust the text color as needed */
}

/* Hover styles for buttons */
button:hover {
    opacity: 0.8; /* Adjust the opacity as needed */
}

.update{
    margin-left: -2px;
    margin-top: 6px;
    margin-bottom: 6px;
}

</style>

<body>
  <form class="mb-4 mx-auto width-full needs-validation" action="/admin/services" method="POST" enctype="multipart/form-data" novalidate>
    <div class="max-w-lg mx-auto p-4 bg-white shadow-lg rounded-lg mt-4 mb-4">
      <div class="mb-4">
        <h2 class="text-lg font-semibold">Add New Service</h2>
      </div>
      <div class="grid grid-cols-1 gap-4">
        <label for="title">Enter Title  </label>
        <input type="text" name="title" placeholder="Enter Title" class="form-control border-orange-500 rounded" required>
        <label for="description">Enter Description</label>
        <input type="text" name="description" placeholder="Enter Description" class="form-control  rounded" required    >
        <label for="image">Enter Image</label>
        <input type="file" name="image" class="form-control border-orange-500 rounded" required>
        <label for="price">Enter Price</label>
        <input type="text" name="price" placeholder="Enter Price" class="form-control border-orange-500 rounded" required>
        <label for="documentCount">Enter Document Count</label>
        <input type="text" name="documentCount" id="documentCount" placeholder="Enter Document Count" class="form-control border-orange-500 rounded" required>
        <div id="documentInputs" ></div>
        <button class="btn">Save Changes</button>
      </div>
    </div>
  </form>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const documentCountInput = document.getElementById('documentCount');
      const documentInputsContainer = document.getElementById('documentInputs');

      documentCountInput.addEventListener('input', function() {
        const count = parseInt(documentCountInput.value);
        generateDocumentInputs(count);
      });

      function generateDocumentInputs(count) {
        documentInputsContainer.innerHTML = '';

        for (let i = 0; i < count; i++) {
          const input = document.createElement('input');
          const label = document.createElement('label');

          label.textContent = `Document ${i + 1}`;

          input.setAttribute('name', `documents`);
          input.setAttribute('type', 'text');
          input.setAttribute('class', 'form-control mb-2 rounded');
          input.setAttribute('placeholder', `Document ${i + 1}`);
          input.setAttribute('required', '');
          
          documentInputsContainer.appendChild(label);
          documentInputsContainer.appendChild(input);
        }
      }
    });

    (function () {
  'use strict'

  // Fetch all the forms we want to apply custom Bootstrap validation styles to
  var forms = document.querySelectorAll('.needs-validation')

  // Loop over them and prevent submission
  Array.prototype.slice.call(forms)
    .forEach(function (form) {
      form.addEventListener('submit', function (event) {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
        }

        form.classList.add('was-validated')
      }, false)
    })
})()
  </script>
</body>
